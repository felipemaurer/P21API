{
	"info": {
		"_postman_id": "ec822e76-2728-487d-b827-ee095b2fc9bb",
		"name": "P21 API Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "_P21 General Calls - (Start Here)",
			"item": [
				{
					"name": "Get P21 Bearer Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "de7b2b37-18b5-44af-8d95-245a3dbaae02",
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"token\", jsonData.AccessToken);\r",
									"postman.setEnvironmentVariable(\"sessionID\", jsonData.SessionId);\r",
									"\r",
									"\r",
									"pm.test(\"Body contains AccessToken\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"AccessToken\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": "This is so that the responses are given back in JSON format. Can be disabled with no issues.",
								"type": "text"
							},
							{
								"key": "username",
								"value": "{{username}}",
								"type": "text"
							},
							{
								"key": "password",
								"value": "{{password}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Endpoint}}/api/security/token/",
							"host": [
								"{{Endpoint}}"
							],
							"path": [
								"api",
								"security",
								"token",
								""
							]
						},
						"description": "Make this call first. It retreives the bearer token and saves it."
					},
					"response": []
				}
			],
			"description": "This is a general Collection for P21 API Calls. \r\n\r\nThe main call in here is to get the bearer token. ",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "c08aef73-c713-442a-ba91-4e03ddf7d8d6",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "8461af9e-730d-4e00-b6e6-d610f54392a7",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Data Services API",
			"item": [
				{
					"name": "Available Data Call",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Endpoint}}/data/erp/views/v1",
							"host": [
								"{{Endpoint}}"
							],
							"path": [
								"data",
								"erp",
								"views",
								"v1"
							]
						},
						"description": "This is a great call to get an idea of what views can be queried from P21.\r\n\r\nNot all views in the database have been made accessible (Additional views and custom views cannot be currently added here). \r\n"
					},
					"response": []
				},
				{
					"name": "Get Contacts from Data API",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Endpoint}}/data/erp/views/v1/p21_view_contacts?$filter=email_address eq 'fmaurer@hydradynellc.com'",
							"host": [
								"{{Endpoint}}"
							],
							"path": [
								"data",
								"erp",
								"views",
								"v1",
								"p21_view_contacts"
							],
							"query": [
								{
									"key": "$filter",
									"value": "email_address eq 'fmaurer@hydradynellc.com'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Data for an Quote/Order",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Endpoint}}/data/erp/views/v1/p21_view_oe_hdr('11686370')",
							"host": [
								"{{Endpoint}}"
							],
							"path": [
								"data",
								"erp",
								"views",
								"v1",
								"p21_view_oe_hdr('11686370')"
							]
						},
						"description": "Be sure to change the order number to something from your system"
					},
					"response": []
				}
			],
			"description": "This is the Data Services Endpoint. A fairly fast set of API calls that are good for pulling data.\r\n\r\n\r\n\r\nPer Epicor: \r\nOverview\r\nThe Middleware now includes an Open Data Protocol (OData) v3 feed for ERP data. The Data Service provides stable, fast querying capability against defined views in the ERP database without exposing your Enterprise database server directly to the consumers.\r\n\r\nWhen To Use\r\nUse the OData Data Service when you need quick read-only access to defined views in the system. OData is typically consumed by an application or client capable of understanding OData v3 protocol (syntax).",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "3feaa2ce-98ec-44c0-b09a-79b57b919053",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "de8e1012-4816-402e-a8ae-9a71c4379f02",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Entity Rest  Services - Old REST API Calls",
			"item": [
				{
					"name": "Create Contact",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<?xml version=\"1.0\"?>\r\n<Contact xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n\t<ContactLinks>\r\n        <ContactLink>\r\n            <!--Enter Cutomer ID Below-->\r\n            <ContactLinkId>177107</ContactLinkId>\r\n            <ContactType>1203</ContactType>\r\n            <!--Be sure to enter your Company ID-->\r\n            <CompanyId>1</CompanyId>\r\n        </ContactLink>\r\n    </ContactLinks>\r\n  <Salutation/>\r\n  <FirstName>{{$randomFirstName}}</FirstName>\r\n  <Mi />\r\n  <LastName>{{$randomLastName}}</LastName>\r\n  <Title>{{$randomJobTitle}}</Title>\r\n  <AddressId>177107</AddressId>\r\n  <Mailstop/>\r\n  <NoOfCycleDays>0</NoOfCycleDays>\r\n  <Comments>{{$randomLoremSentence}}</Comments>\r\n  <DirectPhone/>\r\n  <PhoneExt/>\r\n  <DirectFax/>\r\n  <FaxExt/>\r\n  <Beeper/>\r\n  <Cellular/>\r\n  <Class1id/>\r\n  <Class2id/>\r\n  <Class3id/>\r\n  <Class4id/>\r\n  <Class5id/>\r\n  <HomeAddress1>{{$randomStreetAddress}}</HomeAddress1>\r\n  <HomeAddress2/>\r\n  <HomePhone>{{$randomPhoneNumber}}</HomePhone>\r\n  <HomeFax/>\r\n  <HomeEmailAddress/>\r\n  <Birthday xsi:nil=\"true\" />\r\n  <Anniversary xsi:nil=\"true\" />\r\n  <EmailAddress>{{$randomEmail}}</EmailAddress>\r\n  <Url/>\r\n  <CellularExt/>\r\n  <Id/>\r\n</Contact>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{Endpoint}}/api/entity/contacts/",
							"host": [
								"{{Endpoint}}"
							],
							"path": [
								"api",
								"entity",
								"contacts",
								""
							]
						},
						"description": "This is an old call to create a contact ID in P21 and link it with a Customer ID."
					},
					"response": []
				},
				{
					"name": "Get Tasks via Query API calls",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Endpoint}}/api/sales/tasks/?query=startswith(Subject, '1')",
							"host": [
								"{{Endpoint}}"
							],
							"path": [
								"api",
								"sales",
								"tasks",
								""
							],
							"query": [
								{
									"key": "query",
									"value": "startswith(Subject, '1')"
								}
							]
						},
						"description": "This is a sample call that has a query in it.\r\n\r\nIt will return all tasks based on the query."
					},
					"response": []
				},
				{
					"name": "Price Engine Call",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<ArrayOfItemPriceInfo>\r\n    <ItemPriceInfo>\r\n        <ItemId>10643-8-8</ItemId>\r\n        <SourceLocId>{{LocationID}}</SourceLocId>\r\n        <!--<CustomerPartNo>String content</CustomerPartNo>-->\r\n        <UnitQuantity>1</UnitQuantity>\r\n        <UnitSize>1</UnitSize>\r\n        <UOM>EA</UOM>\r\n        <!--<PriceUom>String content</PriceUom>-->\r\n  \r\n    </ItemPriceInfo>\r\n    <!--\r\n        This is a sample item xml structure\r\n        You can add ass many items as you want, just add an; 'ItemPriceInfo' for each item\r\n        Note: the more items you add the longer the API Call will take\r\n    -->\r\n    <ItemPriceInfo>\r\n        <ItemId>[this can be any valid item id]</ItemId>\r\n        <SourceLocId>{{LocationID}}</SourceLocId>\r\n        <!--<CustomerPartNo>String content</CustomerPartNo>-->\r\n        <UnitQuantity>1</UnitQuantity>\r\n        <UnitSize>1</UnitSize>\r\n        <UOM>EA</UOM>\r\n        <!--<PriceUom>String content</PriceUom>-->\r\n  \r\n    </ItemPriceInfo>\r\n</ArrayOfItemPriceInfo>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{Endpoint}}/api/inventory/v2/parts/prices?companyId=1&salesLocId={{LocationID}}&customerId={{CustomerID}}",
							"host": [
								"{{Endpoint}}"
							],
							"path": [
								"api",
								"inventory",
								"v2",
								"parts",
								"prices"
							],
							"query": [
								{
									"key": "companyId",
									"value": "1"
								},
								{
									"key": "salesLocId",
									"value": "{{LocationID}}"
								},
								{
									"key": "shipToId",
									"value": "",
									"disabled": true
								},
								{
									"key": "orderDate",
									"value": "{OPTIONALORDERDATE}",
									"disabled": true
								},
								{
									"key": "jobNo",
									"value": "{OPTIONALJOBNO}",
									"disabled": true
								},
								{
									"key": "customerId",
									"value": "{{CustomerID}}",
									"description": "Make Sure To"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "These are calls against he old REST P21 API. They are older, and might eventually be depcrecated, but as of now are currently working. \r\n\r\nThey are included as they help get an understanding of API calls, and are also relatively simple to use. \r\n\r\nThey are not recommended for large projects or a tool that might be mission critical, but are a great starting point.\r\n\r\nNote: Dynachange rules, or business logic will not generally impact these.",
			"protocolProfileBehavior": {}
		},
		{
			"name": "Transaction API (AKA: V2 API)",
			"item": [
				{
					"name": "XML Calls",
					"item": [
						{
							"name": "Create Quote/Order",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/xml",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<?xml version=\"1.0\"?>\r\n<TransactionSet xmlns=\"http://schemas.datacontract.org/2004/07/P21.Transactions.Model.V2\" xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\">\r\n    <!--The Name provided relates to the 'Window' under which you are trying to call-->\r\n    <Name>Order</Name>\r\n    <Transactions>\r\n        <Transaction>\r\n            <DataElements>\r\n                <!--\r\n                The DataElement needs to be passed for each 'Tab' in P21 for which you want to enter data. For example for orders you will always need the header tab, and the line items tab.\r\n                In the example below the 'tp_contacts' tab is also passed due to the fact that in our system a Contact ID is required to create an order/quote.                \r\n                -->\r\n                <DataElement>\r\n                    <Keys xmlns:a=\"http://schemas.microsoft.com/2003/10/Serialization/Arrays\"/>\r\n                    <Name>TABPAGE_1.order</Name>\r\n                    <Rows>\r\n                        <Row>\r\n                            <Edits>\r\n                            \t<Edit>\r\n                                    <!--\r\n                                        This controls whether or not it is a quote or an order \r\n                                        ON - Means it will be a Quote\r\n                                        OFF - Means it will be an Order\r\n                                    -->\r\n\t\t\t\t                \t<Name>quote</Name>\r\n\t\t\t\t                \t<Value>OFF</Value>\r\n\t\t\t\t                </Edit>\r\n                                <!--This needs to be a valid ShipTo ID-->\r\n                                <Edit>\r\n                                    <Name>ship_to_id</Name>\r\n                                    <Value>129479</Value>\r\n                                </Edit>\r\n                                <Edit>\r\n                                    <Name>po_no</Name>\r\n                                    <Value>{{$randomLoremSlug}}</Value>\r\n                                </Edit>\r\n                                <!--\r\n                                    Optional: This can be set, but is not required.\r\n                                    If not provided then the API credentials will be used as a default.\r\n                                    Generally a good practice to set, but it must be a valid Taker in the system. \r\n                                -->\r\n                                <Edit>\r\n                                \t<Name>taker</Name>\r\n                                \t<Value>fmaurer</Value>\r\n                                </Edit>\r\n                            </Edits>\r\n                            <RelativeDateEdits/>\r\n                        </Row>\r\n                    </Rows>\r\n                    <Type>Form</Type>\r\n                </DataElement>\r\n                <!-- This DataElement is not generally required, but we have a Screen Designer cahnge that requires it, so it is included here. -->\r\n                <DataElement>\r\n                    <Keys xmlns:a=\"http://schemas.microsoft.com/2003/10/Serialization/Arrays\"/>\r\n                    <Name>tp_contacts.tp_contacts</Name>\r\n                    <Rows>\r\n                        <Row>\r\n                            <Edits>\r\n                                <Edit>\r\n                                    <Name>first_name</Name>\r\n                                    <Value>{{$randomFirstName}}</Value>\r\n                                </Edit>\r\n                                <Edit>\r\n                                    <Name>last_name</Name>\r\n                                    <Value>{{$randomLastName}}</Value>\r\n                                </Edit>\r\n                                <Edit>\r\n                                    <Name>email_address</Name>\r\n                                    <Value>{{$randomEmail}}</Value>\r\n                                </Edit>\r\n                                <!--\r\n                                    This is a User Defined field that in our (Hydradyne) is required in the contacts tab.\r\n                                    It is commented out so it does not impact other users making the call, but left here to give an example of hwo a user defined field can be added to a call\r\n                                -->\r\n                                \r\n                                <Edit>\r\n                                    <Name>ufc_contacts_ud_contact_type</Name>\r\n                                    <Value>1 Customer Buyer</Value>\r\n                                </Edit>\r\n                                \r\n                            </Edits>\r\n                            <RelativeDateEdits/>\r\n                        </Row>\r\n                    </Rows>\r\n                    <Type>Form</Type>\r\n                </DataElement>\r\n                <!-- This DataElement is for the line items. We cant create orders without line items. -->\r\n                <DataElement>\r\n                    <Keys xmlns:a=\"http://schemas.microsoft.com/2003/10/Serialization/Arrays\"/>\r\n                    <Name>TP_ITEMS.items</Name>\r\n                    <Rows>\r\n                        <!--\r\n                            To add multiple items copy the 'Row' Element and add multiple Rows\r\n                            \r\n                            Note: If you need to add the same Item ID to an order multiple times this call needs to be tweaked a bit. This example does not cover that scenario. \r\n                        -->\r\n                        <Row>\r\n                            <Edits>\r\n                                <!--\r\n                                    Item ID needs to Exist\r\n                                 -->\r\n                                <Edit>\r\n                                    <Name>oe_order_item_id</Name>\r\n                                    <Value>10643-8-8</Value>\r\n                                </Edit>\r\n                                <Edit>\r\n                                    <Name>unit_quantity</Name>\r\n                                    <Value>1.000000000</Value>\r\n                                </Edit>\r\n\r\n                                <!-- Optional Field -->\r\n\t\t\t\t\t\t\t\t<Edit>\r\n\t\t\t\t\t\t          <Name>required_date</Name>\r\n\t\t\t\t\t\t          <Value>11/20/2019</Value>\r\n\t\t\t\t\t\t        </Edit>\r\n\r\n                            </Edits>\r\n                            <RelativeDateEdits/>\r\n                        </Row>\r\n                    </Rows>\r\n                    <Type>List</Type>\r\n                </DataElement>\r\n            </DataElements>\r\n            <Status>New</Status>\r\n        </Transaction>\r\n    </Transactions>\r\n    <UseCodeValues>false</UseCodeValues>\r\n</TransactionSet>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{Endpoint}}/uiserver0/api/v2/transaction",
									"host": [
										"{{Endpoint}}"
									],
									"path": [
										"uiserver0",
										"api",
										"v2",
										"transaction"
									]
								},
								"description": "This is a simple Order Creation API call with the Transaction API (sometimes also referred to as 'V2 API')\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "Cancel Order",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "<TransactionSet xmlns=\"http://schemas.datacontract.org/2004/07/P21.Transactions.Model.V2\" xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\">\r\n    <Name>Order</Name>\r\n    <Transactions>\r\n        <Transaction>\r\n            <DataElements>\r\n                <DataElement>\r\n                    <Keys xmlns:a=\"http://schemas.microsoft.com/2003/10/Serialization/Arrays\"></Keys>\r\n                    <Name>TABPAGE_1.order</Name>\r\n                    <Rows>\r\n                        <Row>\r\n                            <Edits>\r\n                                <Edit>\r\n                                    <Name>order_no</Name>\r\n                                    <!-- Be sure to give a valid order number -->\r\n                                    <Value>11686367</Value>\r\n                                </Edit>\r\n                                <Edit>\r\n                                    <Name>cancel_flag</Name>\r\n                                    <Value>N</Value>\r\n                                </Edit>\r\n                            </Edits>\r\n                        </Row>\r\n                    </Rows>\r\n                    <Type>Form</Type>\r\n                </DataElement>\r\n                \r\n            </DataElements>\r\n            <Documents i:nil=\"true\"/>\r\n            <Status>New</Status>\r\n        </Transaction>\r\n    </Transactions>\r\n    <UseCodeValues>false</UseCodeValues>\r\n</TransactionSet>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{Endpoint}}/uiserver0/api/v2/transaction",
									"host": [
										"{{Endpoint}}"
									],
									"path": [
										"uiserver0",
										"api",
										"v2",
										"transaction"
									]
								},
								"description": "Very simple call to cancel an order or quote in P21."
							},
							"response": []
						},
						{
							"name": "Update Order",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "<TransactionSet xmlns=\"http://schemas.datacontract.org/2004/07/P21.Transactions.Model.V2\" xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\">\r\n    <Name>Order</Name>\r\n    <Transactions>\r\n        <Transaction>\r\n            <DataElements>\r\n                <DataElement>\r\n                    <Keys xmlns:a=\"http://schemas.microsoft.com/2003/10/Serialization/Arrays\"></Keys>\r\n                    <Name>TABPAGE_1.order</Name>\r\n                    <Rows>\r\n                        <Row>\r\n                            <Edits>\r\n                                <Edit>\r\n                                    <Name>order_no</Name>\r\n                                    <!-- Be sure to give a valid order number -->\r\n                                    <Value>11686367</Value>\r\n                                </Edit>\r\n                                <Edit>\r\n                                    <Name>oe_hdr_ship2_add1</Name>\r\n                                    <Value>{{$randomStreetAddress}}</Value>\r\n                                </Edit>\r\n                            </Edits>\r\n                        </Row>\r\n                    </Rows>\r\n                    <Type>Form</Type>\r\n                </DataElement>\r\n                <DataElement>\r\n                    <Keys xmlns:a=\"http://schemas.microsoft.com/2003/10/Serialization/Arrays\"></Keys>\r\n                    <Name>TP_SHIPINFO.shipinfo</Name>\r\n                    <Rows>\r\n                        <Row>\r\n                            <Edits>\r\n                                <Edit>\r\n                                    <Name>oe_hdr_carrier_id</Name>\r\n                                    <Value>Best Way</Value>\r\n                                </Edit>\r\n                            </Edits>\r\n                        </Row>\r\n                    </Rows>\r\n                    <Type>Form</Type>\r\n                </DataElement>\r\n                <DataElement>\r\n                    <Keys xmlns:a=\"http://schemas.microsoft.com/2003/10/Serialization/Arrays\">\r\n                        <a:string>note_id</a:string>\r\n                    </Keys>\r\n                    <Name>HDR_NOTE.hdr_note</Name>\r\n                    <Rows>\r\n                        <Row>\r\n                            <Edits>\r\n                                <Edit>\r\n                                    <Name>note</Name>\r\n                                    <Value>1</Value>\r\n                                </Edit>\r\n                                <Edit>\r\n                                    <Name>topic</Name>\r\n                                    <Value/>\r\n                                </Edit>\r\n                                <Edit>\r\n                                    <Name>notepad_class_desc</Name>\r\n                                    <Value/>\r\n                                </Edit>\r\n                            </Edits>\r\n                            <RelativeDateEdits/>\r\n                        </Row>\r\n                    </Rows>\r\n                    <Type>List</Type>\r\n                </DataElement>\r\n            </DataElements>\r\n            <Documents i:nil=\"true\"/>\r\n            <Status>New</Status>\r\n        </Transaction>\r\n    </Transactions>\r\n    <UseCodeValues>false</UseCodeValues>\r\n</TransactionSet>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{Endpoint}}/uiserver0/api/v2/transaction",
									"host": [
										"{{Endpoint}}"
									],
									"path": [
										"uiserver0",
										"api",
										"v2",
										"transaction"
									]
								},
								"description": "This is a call to update an order."
							},
							"response": []
						}
					],
					"description": "The calls in this folder were done with data posted as an XML",
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "JSON Calls",
					"item": [
						{
							"name": "Create Manufacturing Class",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Name\": \"ManufacturingClass\",\r\n    \"UseCodeValues\": false,\r\n    \"Transactions\": [\r\n        {\r\n            \"Status\": \"New\",\r\n            \"DataElements\": [\r\n                {\r\n                    \"Name\": \"FORM.form\",\r\n                    \"Type\": \"Form\",\r\n                    \"Keys\": [],\r\n                    \"Rows\": [\r\n                        {\r\n                            \"Edits\": [\r\n                                {\r\n                                    \"Name\": \"manufacturing_class_id\",\r\n                                    \"Value\": \"123\"\r\n                                },\r\n                                {\r\n                                    \"Name\": \"manufacturing_class_desc\",\r\n                                    \"Value\": \"{{$randomLoremSentence}}\"\r\n                                },\r\n                                {\r\n                                    \"Name\": \"delete_flag\",\r\n                                    \"Value\": \"N\"\r\n                                }\r\n                            ],\r\n                            \"RelativeDateEdits\": []\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            \"Documents\": null\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Endpoint}}/uiserver0/api/v2/transaction",
									"host": [
										"{{Endpoint}}"
									],
									"path": [
										"uiserver0",
										"api",
										"v2",
										"transaction"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Price Book",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Name\": \"SalesPriceBook\",\r\n    \"UseCodeValues\": false,\r\n    \"Transactions\": [\r\n        {\r\n            \"Status\": \"New\",\r\n            \"DataElements\": [\r\n                {\r\n                    \"Name\": \"FORM.form\",\r\n                    \"Type\": \"Form\",\r\n                    \"Keys\": [\r\n                        \"price_book_id\"\r\n                    ],\r\n                    \"Rows\": [\r\n                        {\r\n                            \"Edits\": [\r\n                                {\r\n                                    \"Name\": \"price_book_id\",\r\n                                    \"Value\": \"{{$randomInt}}\"\r\n                                },\r\n                                {\r\n                                    \"Name\": \"price_book_description\",\r\n                                    \"Value\": \"{{$randomLoremSlug}}\"\r\n                                },\r\n                                {\r\n                                    \"Name\": \"row_status_flag\",\r\n                                    \"Value\": \"Active\"\r\n                                }\r\n                            ],\r\n                            \"RelativeDateEdits\": []\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            \"Documents\": null\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Endpoint}}/uiserver0/api/v2/transaction",
									"host": [
										"{{Endpoint}}"
									],
									"path": [
										"uiserver0",
										"api",
										"v2",
										"transaction"
									]
								},
								"description": "This is a simple call to create a Price Book"
							},
							"response": []
						},
						{
							"name": "Create Price Page",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Name\": \"SalesPricePage\",\r\n    \"UseCodeValues\": false,\r\n    \"Transactions\": [\r\n        {\r\n            \"Status\": \"New\",\r\n            \"DataElements\": [\r\n                {\r\n                    \"Name\": \"FORM.form\",\r\n                    \"Type\": \"Form\",\r\n                    \"Keys\": [\r\n                        \"price_page_uid\"\r\n                    ],\r\n                    \"Rows\": [\r\n                        {\r\n                            \"Edits\": [\r\n                                {\r\n                                    \"Name\": \"description\",\r\n                                    \"Value\": \"{{$randomLoremSlug}}\"\r\n                                },\r\n                                {\r\n                                    \"Name\": \"calculator_type\",\r\n                                    \"value\": \"Both\"\r\n                                },\r\n                                {\r\n                                    \"Name\": \"price_page_type_cd\",\r\n                                    \"Value\": \"Item\"\r\n                                },\r\n                                {\r\n                                    \"Name\": \"effective_date\",\r\n                                    \"Value\": \"9/1/2020\"\r\n                                },\r\n                                {\r\n                                    \"Name\": \"expiration_date\",\r\n                                    \"Value\": \"9/10/2020\"\r\n                                },\r\n                                {\r\n                                    \"Name\": \"totaling_method_cd\",\r\n                                    \"Value\": \"Item\"\r\n                                },\r\n                                {\r\n                                    \"Name\": \"totaling_basis_cd\",\r\n                                    \"Value\": \"Sales Unit\"\r\n                                },\r\n                                {\r\n                                    \"Name\": \"row_status_flag\",\r\n                                    \"Value\": \"Active\"\r\n                                },\r\n                                {\r\n                                    \"Name\": \"item_id\",\r\n                                    \"Value\": \"10643-8-8\"\r\n                                },\r\n                                {\r\n                                    \"Name\": \"pricing_method_cd\",\r\n                                    \"Value\": \"Source\"\r\n                                },\r\n                                {\r\n                                    \"Name\": \"source_price_cd\",\r\n                                    \"Value\": \"Supplier List Price\"\r\n                                },\r\n                                {\r\n                                    \"Name\": \"apply_pp_to_mro_cd\",\r\n                                    \"value\": \"No\"\r\n                                }\r\n                            ],\r\n                            \"RelativeDateEdits\": []\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"Name\": \"COSTS.costs\",\r\n                    \"Type\": \"Form\",\r\n                    \"Keys\": [],\r\n                    \"Rows\": [\r\n                        {\r\n                            \"Edits\": [\r\n                                {\r\n                                    \"Name\": \"other_cost_type_cd\",\r\n                                    \"Value\": \"Source\"\r\n                                },\r\n                                {\r\n                                    \"Name\": \"other_cost_source_cd\",\r\n                                    \"Value\": \"Parker Rebates\"\r\n                                },\r\n                                {\r\n                                    \"Name\": \"cost_calculation_value\",\r\n                                    \"Value\": \".24\"\r\n                                }\r\n                            ],\r\n                            \"RelativeDateEdits\": []\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"Name\": \"VALUES.values\",\r\n                    \"Type\": \"Form\",\r\n                    \"Keys\": [],\r\n                    \"Rows\": [\r\n                        {\r\n                            \"Edits\": [\r\n                                {\r\n                                    \"Name\": \"calculation_method_cd\",\r\n                                    \"Value\": \"Multiplier\"\r\n                                },\r\n                                {\r\n                                    \"Name\": \"calculation_value1\",\r\n                                    \"Value\": \".41\"\r\n                                }\r\n                            ],\r\n                            \"RelativeDateEdits\": []\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            \"Documents\": null\r\n        }\r\n    ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Endpoint}}/uiserver0/api/v2/transaction",
									"host": [
										"{{Endpoint}}"
									],
									"path": [
										"uiserver0",
										"api",
										"v2",
										"transaction"
									]
								},
								"description": "This is a call that creates a price page"
							},
							"response": []
						},
						{
							"name": "Add Page to Book",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Name\": \"SalesPriceBook\",\r\n    \"UseCodeValues\": false,\r\n    \"Transactions\": [\r\n                {\r\n                    \"Status\": \"New\",\r\n                    \"DataElements\": [\r\n                        {\r\n                            \"Name\": \"FORM.form\",\r\n                            \"Type\": \"Form\",\r\n                            \"Keys\": [\r\n                               \r\n                            ],\r\n                            \"Rows\": [\r\n                                {\r\n                                    \"Edits\": [\r\n                                        {\r\n                                            \"Name\": \"price_book_id\",\r\n                                            \"Value\": \"{{PriceBookID}}\"\r\n                                        }\r\n                                    ],\r\n                                    \"RelativeDateEdits\": []\r\n                                }\r\n                            ]\r\n                        },\r\n                        {\r\n                            \"Name\": \"LIST.list_detail\",\r\n                            \"Type\": \"List\",\r\n                            \"Keys\": [\r\n                                \"price_page_uid\"\r\n                            ],\r\n                            \"Rows\": [\r\n                                {\r\n                                    \"Edits\": [\r\n                                        {\r\n                                            \"Name\": \"price_page_uid\",\r\n                                            \"Value\": \"{{PricePageUID}}\"\r\n                                        },\r\n                                        {\r\n                                            \"Name\": \"row_status_flag\",\r\n                                            \"Value\": \"Active\"\r\n                                        }\r\n                                    ],\r\n                                    \"RelativeDateEdits\": []\r\n                                }\r\n                            ]\r\n                        }\r\n                    ],\r\n                    \"Documents\": null\r\n                }\r\n            ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Endpoint}}/uiserver0/api/v2/transaction",
									"host": [
										"{{Endpoint}}"
									],
									"path": [
										"uiserver0",
										"api",
										"v2",
										"transaction"
									]
								},
								"description": "This call adds a price page to a Pricing Book"
							},
							"response": []
						},
						{
							"name": "Assembly Endpoint",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Name\": \"Assembly\",\r\n    \"UseCodeValues\": false,\r\n    \"Transactions\": [\r\n        {\r\n            \"Status\": \"New\",\r\n            \"DataElements\": [\r\n                {\r\n                    \"Name\": \"TABPAGE_1.assemblyhdr\",\r\n                    \"Type\": \"Form\",\r\n                    \"Keys\": [\r\n                        \"inv_mast_item_id\"\r\n                    ],\r\n                    \"Rows\": [\r\n                        {\r\n                            \"Edits\": [\r\n                                {\r\n                                    \"Name\": \"inv_mast_item_id\",\r\n                                    \"Value\": \"FELIPE IS BETTER THAN JOHN L\"\r\n                                }\r\n                            ],\r\n                            \"RelativeDateEdits\": []\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"Name\": \"TABPAGE_17.tp_17_dw_17\",\r\n                    \"Type\": \"List\",\r\n                    \"Keys\": [\r\n                        \"item_id_service_labor_id\"\r\n                    ],\r\n                    \"Rows\": [\r\n                        {\r\n                            \"Edits\": [\r\n                                {\r\n                                    \"Name\": \"item_id_service_labor_id\",\r\n                                    \"Value\": \"STANDARD LABOR\"\r\n                                },\r\n                                {\r\n                                    \"Name\": \"operation_cd\",\r\n                                    \"Value\": \"LABOR\"\r\n                                },\r\n                                {\r\n                                    \"Name\": \"quantity\",\r\n                                    \"Value\": \".25\"\r\n                                }\r\n                            ],\r\n                            \"RelativeDateEdits\": []\r\n                        },\r\n                        {\r\n                            \"Edits\": [\r\n                                {\r\n                                    \"Name\": \"item_id_service_labor_id\",\r\n                                    \"Value\": \"10643-8-8\"\r\n                                },\r\n                                {\r\n                                    \"Name\": \"quantity\",\r\n                                    \"Value\": \"1\"\r\n                                }\r\n                            ],\r\n                            \"RelativeDateEdits\": []\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            \"Documents\": null\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{TransactionEndpoint}}",
									"host": [
										"{{TransactionEndpoint}}"
									]
								},
								"description": "This call can create or update an assembly item."
							},
							"response": []
						},
						{
							"name": "Bin Invntory Movement",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Name\": \"BinInventoryMovement\",\r\n  \"UseCodeValues\": false,\r\n  \"Transactions\": [\r\n    {\r\n      \"Status\": \"New\",\r\n      \"DataElements\": [\r\n        {\r\n          \"Name\": \"FORM.form\",\r\n          \"Type\": \"Form\",\r\n          \"Keys\": [],\r\n          \"Rows\": [\r\n            {\r\n              \"Edits\": [\r\n                {\r\n                  \"Name\": \"location_id\",\r\n                  \"Value\": \"100\"\r\n                },\r\n                {\r\n                  \"Name\": \"item_id\",\r\n                  \"Value\": \"10643-8-8\"\r\n                },\r\n                {\r\n                  \"Name\": \"company_id\",\r\n                  \"Value\": \"1\"\r\n                }\r\n              ],\r\n              \"RelativeDateEdits\": []\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          \"Name\": \"BIN.line\",\r\n          \"Type\": \"List\",\r\n          \"Keys\": [\r\n            \"bin_cd\"\r\n          ],\r\n          \"Rows\": [\r\n            {\r\n              \"Edits\": [\r\n                  \r\n                {\r\n                  \"Name\": \"bin_cd\",\r\n                  \"Value\": \"3006A\"\r\n                },\r\n                {\r\n                  \"Name\": \"to_bin_cd\",\r\n                  \"Value\": \"0104A\"\r\n                },\r\n                {\r\n                  \"Name\": \"qty_to_move\",\r\n                  \"Value\": \"1\"\r\n                }\r\n              ],\r\n              \"RelativeDateEdits\": []\r\n            }\r\n          ]\r\n        }\r\n      ],\r\n      \"Documents\": null\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Endpoint}}/uiserver0/api/v2/transaction",
									"host": [
										"{{Endpoint}}"
									],
									"path": [
										"uiserver0",
										"api",
										"v2",
										"transaction"
									]
								},
								"description": "This is an API call that will move inventory from one bin to another bin.\r\n\r\nThe benefit of this call is that it leverages the 'Key' functionality in the API, which allows for one row in a list to be moved without affecting all the rows. "
							},
							"response": []
						}
					],
					"description": "Call in this folder were created using JSON calls. \r\n\r\nNote: Json does not allow for comments, so these API calls generally have no comments. ",
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Get Available Services - Transaction API ",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Endpoint}}/uiserver0/api/v2/services",
							"host": [
								"{{Endpoint}}"
							],
							"path": [
								"uiserver0",
								"api",
								"v2",
								"services"
							]
						},
						"description": "This is a GREAT call to make to get all the available services for the Transaction API.\r\n\r\nIt will return a list of all available services.\r\nUse this combined with e 'Get Defaults - Orders' API call to get the defaults of any service"
					},
					"response": []
				},
				{
					"name": "Get Defaults - Orders",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Endpoint}}/uiserver0/api/v2/defaults/Order",
							"host": [
								"{{Endpoint}}"
							],
							"path": [
								"uiserver0",
								"api",
								"v2",
								"defaults",
								"Order"
							]
						},
						"description": "This call gets the default values for the Order Window. It is a sample of the 'Get Defaults - {{WindowName}}' Call."
					},
					"response": []
				},
				{
					"name": "Get Defaults - {{WindowName}}",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Endpoint}}/uiserver0/api/v2/defaults/{{WindowName}}",
							"host": [
								"{{Endpoint}}"
							],
							"path": [
								"uiserver0",
								"api",
								"v2",
								"defaults",
								"{{WindowName}}"
							]
						},
						"description": "This is a blank call that uses the {{WindowName}} as a variable. Used in combination with the 'Get Available Services' Call."
					},
					"response": []
				}
			],
			"description": "Each DataElement represents a tab within the window. It contains the following information:\r\n\r\n    Name: This uniquely identifies the tab of the window.\r\n    Type: This is the type of the window i.e. Form, List or Other.\r\n    Keys: This is a list of string which represents key columns to identify the unique row for List (list contains multiple row). This information is always available with the template and field definition through above request (Step 2).\r\n    Rows: Represents list of Row. Each Row will contains Edits which represents fields (columns) for the row/record and RelativeDataEdits which contains information about the relative date.\r\n    Edits: Represents list of Edit containing Name and Value.\r\n",
			"protocolProfileBehavior": {}
		},
		{
			"name": "Interactive API",
			"item": [
				{
					"name": "Start Session",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "username",
								"value": "Ability",
								"type": "text"
							},
							{
								"key": "password",
								"value": "Test76155",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<UserParameters xmlns=\"http://schemas.datacontract.org/2004/07/P21.UI.Service.Model.Common.V1\">\r\n    <ResponseWindowHandlingEnabled>true</ResponseWindowHandlingEnabled>\r\n    <SessionTimeout>2147483647</SessionTimeout>\r\n    <SessionType>User</SessionType>\r\n    <TestingOptions>\r\n        <AutoOpenPortals>false</AutoOpenPortals>\r\n        <BypassApplicationRoleSecurity>false</BypassApplicationRoleSecurity>\r\n        <DisableCustomSoftware>false</DisableCustomSoftware>\r\n        <DisableDynachange>false</DisableDynachange>\r\n        <Programmer>false</Programmer>\r\n    </TestingOptions>\r\n</UserParameters>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{Endpoint}}/uiserver0/ui/common/v1/sessions/",
							"host": [
								"{{Endpoint}}"
							],
							"path": [
								"uiserver0",
								"ui",
								"common",
								"v1",
								"sessions",
								""
							]
						},
						"description": "I believe this is working, but I get an error when I call it. Might be missing a header."
					},
					"response": []
				},
				{
					"name": "Ping",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{Endpoint}}/uiserver0/ui/common/v1/sessions/ping",
							"host": [
								"{{Endpoint}}"
							],
							"path": [
								"uiserver0",
								"ui",
								"common",
								"v1",
								"sessions",
								"ping"
							]
						},
						"description": "This will keep the session alive.\r\n\r\nThere is no response."
					},
					"response": []
				},
				{
					"name": "Get Session State",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Name",
								"value": "m_plannedtransferentry",
								"type": "text",
								"disabled": true
							},
							{
								"key": "SessionID",
								"value": "{{sessionID}}",
								"type": "text"
							},
							{
								"key": "WindowID",
								"value": "Order",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Endpoint}}/uiserver0/ui/common/v1/sessions/state?level=0",
							"host": [
								"{{Endpoint}}"
							],
							"path": [
								"uiserver0",
								"ui",
								"common",
								"v1",
								"sessions",
								"state"
							],
							"query": [
								{
									"key": "level",
									"value": "0"
								},
								{
									"key": "Name",
									"value": "m_plannedtransferentry",
									"disabled": true
								}
							]
						},
						"description": "This returns data for the current sessions"
					},
					"response": []
				}
			],
			"description": "The calls in here will be regarding the interactive API. They will most likely be calls that need to be called in sequence in a short timeframe. \r\n\r\nThe plan is to create a folder per 'sequence', so that several different things can be done. \r\n\r\nCurrently this is a working folder...so everything is subject to change.",
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "ef1eb4d0-41aa-4339-be43-36d9f725d4a6",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "411b90b9-e61d-4dbd-9158-9cbeb4f853ab",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Non-Working Calls",
			"item": [
				{
					"name": "{{Endpoint}}/uiserver0/api/v2/commands",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Requests\": [\r\n        {\r\n            \"Action\": 0,\r\n            \"DetailLevel\": 0,\r\n            \"Args\": {\r\n                \"ServiceName\": \"SupplierNotepad\"\r\n            }\r\n        },\r\n        {\r\n            \"Action\": 2,\r\n            \"DetailLevel\": 0,\r\n            \"Args\": {\r\n                \"List\": [\r\n                    {\r\n                        \"DatawindowName\": \"tp_1_dw_1\",\r\n                        \"FieldName\": \"supplier_id\",\r\n                        \"Value\": \"100273\"\r\n                    },\r\n                    {\r\n                        \"DatawindowName\": \"tp_1_dw_1\",\r\n                        \"FieldName\": \"topic\",\r\n                        \"Value\": \"DaVinci\"\r\n                    },\r\n                    {\r\n                        \"DatawindowName\": \"tp_1_dw_1\",\r\n                        \"FieldName\": \"mandatory\",\r\n                        \"Value\": \"Y\"\r\n                    },\r\n                    {\r\n                        \"DatawindowName\": \"tp_1_dw_1\",\r\n                        \"FieldName\": \"note\",\r\n                        \"Value\": \"DaVinci Note\"\r\n                    },\r\n                    {\r\n                        \"DatawindowName\": \"tp_1_dw_1\",\r\n                        \"FieldName\": \"notepad_class\",\r\n                        \"Value\": \"ORDER\"\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            \"Action\": 5,\r\n            \"DetailLevel\": 0,\r\n            \"Args\": {\r\n                \"DatawindowName\": \"tp_17_dw_dragdrop\",\r\n                \"Row\": 2\r\n            }\r\n        },\r\n        {\r\n            \"Action\": 9,\r\n            \"DetailLevel\": 0,\r\n            \"Args\": {\r\n                \"ToolName\": \"cb_select\",\r\n                \"Row\": 0\r\n            }\r\n        },\r\n        {\r\n            \"Action\": 6,\r\n            \"DetailLevel\": 0\r\n        },\r\n        {\r\n            \"Action\": 1,\r\n            \"DetailLevel\": 0\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Endpoint}}/uiserver0/api/v2/commands",
							"host": [
								"{{Endpoint}}"
							],
							"path": [
								"uiserver0",
								"api",
								"v2",
								"commands"
							]
						},
						"description": "This is a call to create 'Commands' which is a special part of the API. Mainly intended for notes.\r\n\r\nCurrently a work in progress."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "e3a55507-9bbc-4d9b-9816-a100fd5cc024",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "0bec384a-8ef0-4b07-b2b3-a4e7d02ecb5a",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}